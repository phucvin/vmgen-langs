\ comments start with "\ " (note that "\E" is not a comment)

\ stack definitions:
\E stack data-stack sp Cell

\ stack prefix definitions
\E inst-stream stack-prefix #

\ type prefix definitions:
\E s" long" single data-stack type-prefix i
\E s" Inst *" single data-stack type-prefix target

alloc_v ( #i0 -- )
var_begin = var_end;
var_end += i0 + 1;
vars[var_end - 1] = i0;  // save for later deallocate

set_vr ( #i0 #i1 -- )
vars[var_begin + i0] = regs[i1];

sub_rvl ( #i0 #i1 #i2 -- )
regs[i0] = vars[var_begin + i1] - i2;

add_rrv ( #i0 #i1 #i2 -- )
regs[i0] = regs[i1] + vars[var_begin + i2];

jump_v_dealloc ( #i0 -- )
SET_IP(vars[var_begin + i0]);
var_tmp = var_begin;
var_end = var_begin;
var_begin = var_end - vars[var_tmp - 1] - 1;

add_rrr ( #i0 #i1 #i2 -- )
regs[i0] = regs[i1] + regs[i2];

sub_rrl ( #i0 #i1 #i2 -- )
regs[i0] = regs[i1] - i2;

sub_rlr ( #i0 #i1 #i2 -- )
regs[i0] = i1 - regs[i2];

sub_rrr ( #i0 #i1 #i2 -- )
regs[i0] = regs[i1] - regs[i2];

set_rl ( #i0 #i1 -- )
regs[i0] = i1;

set_rr ( #i0 #i1 -- )
regs[i0] = regs[i1];

jump_l ( #target0 -- )
SET_IP(target0);

jump_r ( #i0 -- )
SET_IP(regs[i0]);

jump_l_if_r_lt_l ( #target0 #i0 #i1 -- )
if (regs[i0] < i1) SET_IP(target0);

halt_r ( #i0 -- )
return regs[i0];

\ Super instructions below

s_call0 = set_rl jump_l